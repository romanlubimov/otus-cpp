name: 'C++ CI'

on:
  push:
    branches:
      - master
      - feature/github_actions

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - run: sudo apt-get update && sudo apt-get install libboost-test-dev -y
      - run: sudo apt-get install -y cmake g++  # Убедитесь, что у вас установлены необходимые пакеты
      - run: cmake . -DLINUX_DISTR_NAME=ubuntu -DPATCH_VERSION=${{ github.run_number }} -DWITH_BOOST_TEST=ON -DWITH_GTEST=ON
      - run: cmake --build .
      - run: cmake --build . --target test_version_boost
      - run: cmake --build . --target test_version_gtest
      - run: cmake --build . --target package
      - name: Save Ubuntu Package
        run: |
          mv ./helloworld-0.0.${{ github.run_number }}-ubuntu.deb ./ubuntu-package.deb
      - name: Upload Ubuntu Package as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ubuntu-package
          path: ./ubuntu-package.deb

  build_debian:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Set up Docker
        run: |
          docker pull debian:12

      - name: Build in Docker
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace debian:12 /bin/bash -c "
            apt-get update && \
            apt-get install -y cmake libboost-test-dev g++ git && \
            cmake . -DLINUX_DISTR_NAME=debian -DPATCH_VERSION=${{ github.run_number }} -DWITH_BOOST_TEST=ON -DWITH_GTEST=ON && \
            cmake --build . && \
            cmake --build . --target test_version_boost && \
            cmake --build . --target test_version_gtest && \
            cmake --build . --target package
          "
      - name: Save Debian Package
        run: |
          mv ./helloworld-0.0.${{ github.run_number }}-debian.deb ./debian-package.deb
      - name: Upload Debian Package as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: debian-package
          path: ./debian-package.deb

  create_release:
    runs-on: ubuntu-latest
    needs: [build, build_debian]
    steps:
      - name: Download Ubuntu Package
        uses: actions/download-artifact@v4
        with:
          name: ubuntu-package
          path: ./ 

      - name: Download Debian Package
        uses: actions/download-artifact@v4
        with:
          name: debian-package
          path: ./ 

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Ubuntu Release Asset
        id: upload-ubuntu-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ubuntu-package.deb
          asset_name: helloworld-0.0.${{ github.run_number }}-ubuntu.deb
          asset_content_type: application/vnd.debian.binary-package

      - name: Upload Debian Release Asset
        id: upload-debian-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./debian-package.deb
          asset_name: helloworld-0.0.${{ github.run_number }}-debian.deb
          asset_content_type: application/vnd.debian.binary-package
